{"version":3,"sources":["components/Context.js","components/Header.js","components/LoginForm.js","components/ConnectionsList.js","components/NewUserForm.js","components/IconButtonWithDialog.js","components/UsersList.js","components/App.js","index.js"],"names":["Context","createContext","cookies","Cookies","lastUrl","get","ws","reconnect","accessToken","refreshToken","online","ContextProvider","props","enqueueSnackbar","useSnackbar","useState","missedMessage","setMissedMessage","connected","setConnected","loggedIn","setLoggedIn","users","setUsers","connections","setConnections","set","access","refresh","reset","close","remove","sendMessage","channel","data","token","send","JSON","stringify","useEffect","connect","providedUrl","url","WebSocket","onopen","clearInterval","onmessage","e","msg","parse","refreshConnections","refreshUsers","onclose","setInterval","bind","Provider","value","login","username","password","logout","createUser","changePassword","removeUser","children","ContextConsumer","Consumer","useStyles","makeStyles","theme","root","flexGrow","title","tabs","mixins","toolbar","marginRight","spacing","Header","tab","history","useHistory","location","useLocation","classes","context","useContext","anchorEl","setAnchorEl","open","Boolean","pathname","AppBar","className","position","Toolbar","Typography","variant","Tabs","Tab","label","onClick","push","IconButton","color","event","currentTarget","Menu","keepMounted","id","onClose","MenuItem","paper","margin","marginTop","padding","maxWidth","button","height","LoginForm","server","setServer","setUsername","setPassword","Paper","Grid","container","direction","item","xs","TextField","fullWidth","defaultValue","onChange","target","Button","size","this","type","disabled","StyledTableCell","withStyles","head","backgroundColor","palette","primary","main","common","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","minWidth","fab","bottom","right","ConnectionList","Fragment","Fab","TableContainer","component","Table","TableHead","align","TableBody","map","index","key","scope","Date","timestamp","toLocaleString","a_lat","a_lon","a_alt","b_lat","b_lon","b_alt","inner","NewUserForm","IconButtonWithDialog","setOpen","handleClose","Dialog","DialogContent","autoFocus","DialogActions","rightCell","width","UsersList","handleRemove","createMuiTheme","secondary","App","exact","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4adc8770.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport const Context = createContext();\r\n\r\nconst cookies = new Cookies();\r\nvar lastUrl = cookies.get(\"fimme-server\");\r\nvar ws = null;\r\nvar reconnect = null;\r\nvar accessToken = null;\r\nvar refreshToken = cookies.get(\"fimme-token\");\r\nvar online = false;\r\n\r\nexport function ContextProvider (props)\r\n{\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [missedMessage, setMissedMessage] = useState(null);\r\n    const [connected, setConnected] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [connections, setConnections] = useState([]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        connect(lastUrl);\r\n    }, []);\r\n\r\n    function set(access, refresh)\r\n    {\r\n        accessToken = access;\r\n        refreshToken = refresh;\r\n        cookies.set(\"fimme-token\", refresh);\r\n        setLoggedIn(true);\r\n    }\r\n\r\n    function reset()\r\n    {\r\n        ws && ws.close();\r\n        ws = null;\r\n        lastUrl = null;\r\n        accessToken = null;\r\n        refreshToken = null;\r\n        online = false;\r\n\r\n        setConnected(false);\r\n        setLoggedIn(false);\r\n        setUsers([]);\r\n        setConnections([]);\r\n        cookies.remove(\"fimme-token\");\r\n        enqueueSnackbar(\"Logged out.\");\r\n    }\r\n\r\n    function sendMessage(channel, data)\r\n    {\r\n        var token = channel === \"authenticate\" ? null : accessToken;\r\n        online && ws.send(JSON.stringify({ token: token, channel: channel, data: data }));\r\n    }\r\n\r\n    const connect = (providedUrl) =>\r\n    {\r\n        var url = providedUrl ? providedUrl : lastUrl;\r\n\r\n        if (url && url !== \"\")\r\n        {\r\n            lastUrl = url;\r\n            ws = new WebSocket(url);\r\n    \r\n            ws.onopen = () =>\r\n            {\r\n                clearInterval(reconnect);\r\n                enqueueSnackbar(\"Connected to the server.\");\r\n                setConnected(true);\r\n                online = true;\r\n                cookies.set(\"fimme-server\", lastUrl);\r\n                \r\n                \r\n                var token = cookies.get(\"fimme-token\");\r\n                if (token)\r\n                   sendMessage(\"authenticate\", token);\r\n            }\r\n    \r\n            ws.onmessage = (e) =>\r\n            {\r\n                var msg = JSON.parse(e.data);\r\n    \r\n                switch (msg.channel)\r\n                {\r\n                    case \"admin-login-accepted\":\r\n                        set(msg.data.accessToken, msg.data.refreshToken);\r\n                        refreshConnections();\r\n                        refreshUsers();\r\n                        break;\r\n    \r\n                    case \"admin-login-denied\":\r\n                        enqueueSnackbar(\"Login denied. Please check your credentials.\");\r\n                        setLoggedIn(false);\r\n                        break;\r\n    \r\n                    case \"authenticated\":\r\n                        set(msg.data.accessToken, msg.data.refreshToken);\r\n                        if (missedMessage) \r\n                        {\r\n                            sendMessage(missedMessage.channel, missedMessage.data);\r\n                            setMissedMessage(null);\r\n                        }\r\n                        refreshConnections();\r\n                        refreshUsers();\r\n                        break;\r\n    \r\n                    case \"unauthenticated\":\r\n                        if (msg.data.channel !== \"authenticate\")\r\n                        {\r\n                            setMissedMessage(msg.data);\r\n                            sendMessage(\"authenticate\", refreshToken);\r\n                        }\r\n                        else\r\n                            reset();\r\n                        break;\r\n    \r\n                    case \"users-list\":\r\n                        setUsers(msg.data);\r\n                        break;\r\n    \r\n                    case \"connections-list\":\r\n                        setConnections(msg.data);\r\n                        break;\r\n    \r\n                    case \"register-accepted\":\r\n                        enqueueSnackbar(\"User created.\");\r\n                        sendMessage(\"fetch-users\", \"\");\r\n                        break;\r\n    \r\n                    case \"user-removed\":\r\n                        enqueueSnackbar(\"User removed.\");\r\n                        sendMessage(\"fetch-users\", \"\");\r\n                        break;\r\n    \r\n                    case \"logged-out\":\r\n                        reset();\r\n                        break;\r\n    \r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n    \r\n            ws.onclose = () =>\r\n            {\r\n                enqueueSnackbar(\"Connection with server failed. Trying to reconnect...\");\r\n                setConnected(false);\r\n                online = false;\r\n                clearInterval(reconnect);\r\n                reconnect = setInterval(connect.bind(this, lastUrl), 2000);\r\n            }\r\n        }\r\n    }\r\n\r\n    const login = (username, password) =>\r\n    {\r\n        var data =  { username: username, password: password };\r\n        sendMessage(\"request-admin-login\", data);\r\n    };\r\n\r\n    const logout = () =>\r\n    {\r\n        sendMessage(\"request-logout\", refreshToken);\r\n    };\r\n\r\n    const createUser = (username, password) =>\r\n    {\r\n        var data = { username: username, password: password };\r\n        sendMessage(\"request-register\", data);\r\n    };\r\n\r\n    const changePassword = (username, password) =>\r\n    {\r\n        var data = { username: username, password: password };\r\n        sendMessage(\"change-password\", data);\r\n    };\r\n\r\n    const removeUser = (username) =>\r\n    {\r\n        sendMessage(\"remove-user\", username);\r\n    };\r\n\r\n    const refreshUsers = () =>\r\n    {\r\n        sendMessage(\"fetch-users\", \"\");\r\n    };\r\n\r\n    const refreshConnections = () =>\r\n    {\r\n        sendMessage(\"fetch-connections\", \"\");\r\n    };\r\n\r\n    return (\r\n        <Context.Provider\r\n            value={{\r\n                users: users,\r\n                connections: connections,\r\n                connected: connected,\r\n                loggedIn: loggedIn,\r\n                lastUrl: lastUrl,\r\n                connect: (url) => connect(url),\r\n                login: (username, password) => login(username, password),\r\n                logout: () => logout(),\r\n                createUser: (username, password) => createUser(username, password),\r\n                changePassword: (username, password) => changePassword(username, password),\r\n                removeUser: (username) => removeUser(username),\r\n                refreshUsers: () => refreshUsers(),\r\n                refreshConnections: () => refreshConnections()}}>\r\n                    {props.children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport const ContextConsumer = Context.Consumer;","import React, { useState, useContext } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport { Context } from './Context';\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n{\r\n\troot: {\r\n        flexGrow: 1\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    tabs: {\r\n        ...theme.mixins.toolbar,\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function Header () {\r\n\t\r\n    var history = useHistory();\r\n    var location = useLocation();\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n    \r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    var tab;\r\n    switch (location.pathname)\r\n    {\r\n        case \"/connections\":\r\n            tab = 0;\r\n            break;\r\n        \r\n        case \"/users\":\r\n            tab = 1;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const handleMenu = (event) => \r\n    {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = () =>\r\n    {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => \r\n    {\r\n        context.logout();\r\n        history.push(\"/login\");\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\tconst handleConnections = () => {\r\n        history.push(\"/connections\");\r\n\t};\r\n\r\n\tconst handleUsers = () => {\r\n        history.push(\"/users\");\r\n    };\r\n\r\n\treturn (\r\n\t\t<AppBar className={classes.root} position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Fimme Administration Console\r\n                </Typography>\r\n                <Tabs className={classes.tabs} value={tab}>\r\n                    <Tab className={classes.tabs} label=\"Connections\" onClick={handleConnections} />\r\n                    <Tab className={classes.tabs} label=\"Users\" onClick={handleUsers} />\r\n                </Tabs>\r\n                <IconButton color=\"inherit\" onClick={handleMenu}>\r\n                    <AccountIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    keepMounted id=\"menu-appbar\" anchorEl={anchorEl}\r\n                    open={open} onClose={handleCloseMenu}>\r\n                        <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n                </Menu>\r\n            </Toolbar>\r\n        </AppBar>\r\n\t);\r\n}","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Context } from './Context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        margin: 'auto',\r\n        marginTop: theme.spacing(4),\r\n        padding: theme.spacing(2),\r\n        maxWidth: 480\r\n    },\r\n    button: {\r\n        height: 56\r\n    }\r\n}));\r\n\r\nexport default function LoginForm ()\r\n{\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n\r\n    const [server, setServer] = useState(context.lastUrl);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleServer = (event) =>\r\n    {\r\n        setServer(event.target.value);\r\n    };\r\n\r\n    const handleUsername = (event) =>\r\n    {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const handlePassword = (event) =>\r\n    {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container spacing={2} direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={9}>\r\n                            <TextField\r\n                                fullWidth variant=\"outlined\"\r\n                                id=\"server\"\r\n                                label=\"Server URL\"\r\n                                defaultValue={server}\r\n                                onChange={handleServer}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\" color=\"primary\"\r\n                                fullWidth size=\"large\"\r\n                                onClick={context.connect.bind(this, server)}>\r\n                                    { context.connected ? \"Connected\" : \"Connect\" }\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth variant=\"outlined\"\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        defaultValue={username}\r\n                        onChange={handleUsername}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth variant=\"outlined\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        defaultValue={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button \r\n                        className={classes.button}\r\n                        variant=\"contained\" color=\"primary\"\r\n                        fullWidth size=\"large\"\r\n                        disabled={!context.connected}\r\n                        onClick={context.login.bind(this, username, password)}>\r\n                            Log in\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Context } from './Context';\r\n\r\nconst StyledTableCell = withStyles((theme) => (\r\n{\r\n    head: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white\r\n    },\r\n    body: {\r\n        fontSize: 14\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => (\r\n{\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n{\r\n    root: {\r\n        margin: 'auto',\r\n        marginTop: theme.spacing(4),\r\n        minWidth: 480,\r\n        maxWidth: 800\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(4),\r\n      right: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nexport default function ConnectionList ()\r\n{\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fab\r\n                className={classes.fab} color=\"primary\"\r\n                disabled={!context.connected}\r\n                onClick={context.refreshConnections.bind(this)}>\r\n                    <RefreshIcon />\r\n            </Fab>\r\n            <TableContainer component={Paper} className={classes.root}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Timestamp</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Client A's coordinates</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Client B's coordinates</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {context.connections.map((item, index) => (\r\n                        <StyledTableRow key={index}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {new Date(item.timestamp * 1000).toLocaleString()}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"right\">\r\n                                lat: {item.a_lat} lon: {item.a_lon} alt: {item.a_alt}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"right\">\r\n                                lat: {item.b_lat} lon: {item.b_lon} alt: {item.b_alt}\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Context } from './Context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        margin: 'auto',\r\n        marginTop: theme.spacing(4),\r\n        minWidth: 480,\r\n        maxWidth: 800\r\n    },\r\n    inner: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        height: 56\r\n    }\r\n}));\r\n\r\nexport default function NewUserForm ()\r\n{\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleUsername = (event) =>\r\n    {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const handlePassword = (event) =>\r\n    {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleButton = () =>\r\n    {\r\n        if (username !== \"\" && password !== \"\")\r\n            context.createUser(username, password);\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container>\r\n                <Grid className={classes.inner} container item spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography>Create a new user</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            fullWidth variant=\"outlined\"\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            defaultValue={username}\r\n                            onChange={handleUsername}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            fullWidth variant=\"outlined\"\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            defaultValue={password}\r\n                            onChange={handlePassword}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Button \r\n                            className={classes.button}\r\n                            variant=\"contained\" color=\"primary\"\r\n                            fullWidth size=\"large\"\r\n                            disabled={!context.connected}\r\n                            onClick={handleButton}>\r\n                                Create\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport KeyIcon from '@material-ui/icons/VpnKey';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Context } from './Context';\r\n\r\nexport default function IconButtonWithDialog ({username})\r\n{\r\n    const context = useContext(Context);\r\n    const [open, setOpen] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleClickOpen = () => \r\n    {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => \r\n    {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handlePassword = (event) =>\r\n    {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const changePassword = () =>\r\n    {\r\n        context.changePassword(username, password);\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton \r\n                disabled={!context.connected}\r\n                onClick={handleClickOpen}>\r\n                    <KeyIcon />\r\n            </IconButton>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth autoFocus\r\n                        id=\"password\" label=\"New password\"\r\n                        defaultValue={password} onChange={handlePassword}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={changePassword} color=\"primary\">\r\n                        Change\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Clear';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport NewUserForm from './NewUserForm';\r\nimport IconButtonWithDialog from './IconButtonWithDialog';\r\nimport { Context } from './Context';\r\n\r\nconst StyledTableCell = withStyles((theme) => (\r\n{\r\n    head: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white\r\n    },\r\n    body: {\r\n        fontSize: 14\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => (\r\n{\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n{\r\n    root: {\r\n        margin: 'auto',\r\n        marginTop: theme.spacing(4),\r\n        minWidth: 480,\r\n        maxWidth: 800\r\n    },\r\n    rightCell: {\r\n        width: 48,\r\n        padding: 0\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(4),\r\n      right: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nexport default function UsersList ()\r\n{\r\n    const classes = useStyles();\r\n    const context = useContext(Context);\r\n\r\n    const handleRemove = (username) => \r\n    {\r\n        context.removeUser(username);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fab\r\n                className={classes.fab} color=\"primary\"\r\n                disabled={!context.connected}\r\n                onClick={context.refreshUsers}>\r\n                    <RefreshIcon />\r\n            </Fab>\r\n            <NewUserForm />\r\n            <TableContainer component={Paper} className={classes.root}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Username</StyledTableCell>\r\n                            <StyledTableCell />\r\n                            <StyledTableCell />\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {context.users.map((item, index) => (\r\n                        <StyledTableRow key={index}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {item.username}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell className={classes.rightCell} align=\"right\">\r\n                                <IconButtonWithDialog username={item.username} />\r\n                            </StyledTableCell>\r\n                            <StyledTableCell className={classes.rightCell} align=\"right\">\r\n                                <IconButton\r\n                                    disabled={!context.connected}\r\n                                    onClick={handleRemove.bind(this, item.username)}>\r\n                                    <RemoveIcon />\r\n                                </IconButton>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport Header from './Header';\nimport LoginForm from './LoginForm';\nimport ConnectionsList from './ConnectionsList';\nimport UsersList from './UsersList';\nimport { ContextProvider, ContextConsumer } from './Context';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#6200EE'\n        },\n        secondary: {\n            main: '#FFFFFF'\n        }\n    }\n});\n\nexport default function App () \n{\n    return (\n        <MuiThemeProvider theme={theme}>\n            <SnackbarProvider>\n                <ContextProvider>\n                    <ContextConsumer>\n                    {({loggedIn}) => (\n                        <Router>\n                            <Switch>\n                                <Route exact path=\"/\">\n                                {\n                                    loggedIn ?\n                                        <Redirect to=\"/connections\" />\n                                    :\n                                        <Redirect to=\"/login\" />\n                                }\n                                </Route>\n                                <Route exact path=\"/login\">\n                                    <LoginForm />\n                                    { loggedIn && <Redirect to=\"/connections\" /> }\n                                </Route>\n                                <Route exact path=\"/connections\">\n                                    <Header />\n                                    <ConnectionsList />\n                                    { !loggedIn && <Redirect to=\"/login\" /> } \n                                </Route>\n                                <Route exact path=\"/users\">\n                                    <Header />\n                                    <UsersList />\n                                    { !loggedIn && <Redirect to=\"/login\" /> }\n                                </Route>\n                            </Switch>\n                        </Router>\n                    )}\n                    </ContextConsumer>\n                </ContextProvider>\n            </SnackbarProvider>\n        </MuiThemeProvider>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}